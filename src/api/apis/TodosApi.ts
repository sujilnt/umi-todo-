/* tslint:disable */
/* eslint-disable */
/**
 * Todos
 * A simple full stack todo app
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import { Todos, TodosFromJSON, TodosToJSON } from '../models';

export interface DeleteTodosByIdsRequest {
  requestBody: Array<string>;
}

/**
 *
 */
export class TodosApi extends runtime.BaseAPI {
  /**
   * deleting todos based on todo id
   * deletes the List of todos
   */
  async deleteTodosByIdsRaw(
    requestParameters: DeleteTodosByIdsRequest,
    initOverrides?: RequestInit,
  ): Promise<runtime.ApiResponse<void>> {
    if (
      requestParameters.requestBody === null ||
      requestParameters.requestBody === undefined
    ) {
      throw new runtime.RequiredError(
        'requestBody',
        'Required parameter requestParameters.requestBody was null or undefined when calling deleteTodosByIds.',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters['Content-Type'] = 'application/json';

    const response = await this.request(
      {
        path: `/todos`,
        method: 'DELETE',
        headers: headerParameters,
        query: queryParameters,
        body: requestParameters.requestBody,
      },
      initOverrides,
    );

    return new runtime.VoidApiResponse(response);
  }

  /**
   * deleting todos based on todo id
   * deletes the List of todos
   */
  async deleteTodosByIds(
    requestParameters: DeleteTodosByIdsRequest,
    initOverrides?: RequestInit,
  ): Promise<void> {
    await this.deleteTodosByIdsRaw(requestParameters, initOverrides);
  }

  /**
   * gets All List of todos
   * gets All List of todos
   */
  async getAllTodosRaw(
    initOverrides?: RequestInit,
  ): Promise<runtime.ApiResponse<Array<Todos>>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    const response = await this.request(
      {
        path: `/todos`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      jsonValue.map(TodosFromJSON),
    );
  }

  /**
   * gets All List of todos
   * gets All List of todos
   */
  async getAllTodos(initOverrides?: RequestInit): Promise<Array<Todos>> {
    const response = await this.getAllTodosRaw(initOverrides);
    return await response.value();
  }
}
